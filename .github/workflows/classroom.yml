name: Java CI with Maven (Auto-Grading)

# This triggers the workflow to run on every push to the repository's main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Java JDK (you can choose version 11, 17, etc. based on your needs)
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Cache Maven dependencies to improve build speed
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Build the project with Maven
      - name: Build with Maven
        run: mvn clean install

      # Run the tests using Maven (which will execute the JUnit tests)
      - name: Run JUnit Tests
        run: mvn test

      # Optional: If you want to collect and upload test reports (JUnit XML reports)
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/surefire-reports/
